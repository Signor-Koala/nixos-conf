workspace "w1"
workspace "w2"
workspace "w3"
workspace "w4"
workspace "w5"
workspace "w6"
workspace "w7"
workspace "w8"
workspace "w9"

input {
    keyboard {
        numlock
    }
    touchpad {
        tap
        dwt
        dwtp
        drag true
        natural-scroll
        disabled-on-external-mouse
        tap-button-map "left-right-middle"
    }
    mouse {
        accel-profile "flat"
    }
    trackpoint {
        natural-scroll
        scroll-method "on-button-down"
    }
    warp-mouse-to-focus
    focus-follows-mouse max-scroll-amount="90%"
}

output "eDP-1" {
    mode "1920x1200@60"

    scale 1

    transform "normal"
}

layout {
    gaps 10

    // - "on-overflow", focusing a column will center it if it doesn't fit
    //   together with the previously focused column.

    // center-focused-column "on-overflow"

    preset-column-widths {
        proportion 0.33333
        proportion 0.5
        proportion 0.66667
    }

    default-column-width {proportion 0.5;}

    focus-ring {
        width 3
        active-color "#ea00ff"
        inactive-color "#000000"
    }

    border {
        off
    }
}

spawn-at-startup "waybar"
spawn-at-startup "xwayland-satellite"

environment {
    DISPLAY ":0"
}

prefer-no-csd

screenshot-path "~/Screenshots/screenshot_%Y-%m-%d_%H-%M-%S.png"

animations {
    slowdown 0.7
}

// Open the Firefox picture-in-picture player as floating by default.
window-rule {
    match app-id=r#"firefox$"# title="^Picture-in-Picture$"
    open-floating true
}

binds {

    Mod+Shift+Slash { show-hotkey-overlay; }

    Mod+Return hotkey-overlay-title="Open a Terminal: alacritty" { spawn "alacritty"; }
    Mod+D hotkey-overlay-title="Run an Application: fuzzel" { spawn "fuzzel"; }
    Mod+Alt+L hotkey-overlay-title="Lock the Screen: swaylock" { spawn "swaylock"; }

    XF86AudioRaiseVolume allow-when-locked=true { spawn "wpctl" "set-volume" "@DEFAULT_AUDIO_SINK@" "0.1+"; }
    XF86AudioLowerVolume allow-when-locked=true { spawn "wpctl" "set-volume" "@DEFAULT_AUDIO_SINK@" "0.1-"; }
    XF86AudioMute        allow-when-locked=true { spawn "wpctl" "set-mute" "@DEFAULT_AUDIO_SINK@" "toggle"; }
    XF86AudioMicMute     allow-when-locked=true { spawn "wpctl" "set-mute" "@DEFAULT_AUDIO_SOURCE@" "toggle"; }

    Mod+O repeat=false { toggle-overview; }

    Mod+C { close-window; }

    Mod+H     { focus-column-left; }
    Mod+J     { focus-window-down; }
    Mod+K     { focus-window-up; }
    Mod+L     { focus-column-right; }

    Mod+Ctrl+H     { move-column-left; }
    Mod+Ctrl+J     { move-window-down; }
    Mod+Ctrl+K     { move-window-up; }
    Mod+Ctrl+L     { move-column-right; }

    Mod+G { focus-column-first; }
    Mod+Shift+G  { focus-column-last; }
    Mod+Ctrl+G { move-column-to-first; }
    Mod+Ctrl+Shift+G  { move-column-to-last; }

    // Mod+U              { focus-workspace-down; }
    // Mod+I              { focus-workspace-up; }

    // Mod+Ctrl+U         { move-column-to-workspace-down; }
    // Mod+Ctrl+I         { move-column-to-workspace-up; }
    //
    // Mod+Shift+U         { move-workspace-down; }
    // Mod+Shift+I         { move-workspace-up; }

    Mod+WheelScrollRight      { focus-column-right; }
    Mod+WheelScrollLeft       { focus-column-left; }
    Mod+Ctrl+WheelScrollRight { move-column-right; }
    Mod+Ctrl+WheelScrollLeft  { move-column-left; }

    Mod+Shift+WheelScrollDown      { focus-column-right; }
    Mod+Shift+WheelScrollUp        { focus-column-left; }
    Mod+Ctrl+Shift+WheelScrollDown { move-column-right; }
    Mod+Ctrl+Shift+WheelScrollUp   { move-column-left; }

    Mod+1 { focus-workspace "w1"; }
    Mod+2 { focus-workspace "w2"; }
    Mod+3 { focus-workspace "w3"; }
    Mod+4 { focus-workspace "w4"; }
    Mod+5 { focus-workspace "w5"; }
    Mod+6 { focus-workspace "w6"; }
    Mod+7 { focus-workspace "w7"; }
    Mod+8 { focus-workspace "w8"; }
    Mod+9 { focus-workspace "w9"; }
    Mod+Shift+1 { move-column-to-workspace "w1"; }
    Mod+Shift+2 { move-column-to-workspace "w2"; }
    Mod+Shift+3 { move-column-to-workspace "w3"; }
    Mod+Shift+4 { move-column-to-workspace "w4"; }
    Mod+Shift+5 { move-column-to-workspace "w5"; }
    Mod+Shift+6 { move-column-to-workspace "w6"; }
    Mod+Shift+7 { move-column-to-workspace "w7"; }
    Mod+Shift+8 { move-column-to-workspace "w8"; }
    Mod+Shift+9 { move-column-to-workspace "w9"; }

    Mod+BracketLeft  { consume-or-expel-window-left; }
    Mod+BracketRight { consume-or-expel-window-right; }

    // Mod+Comma  { consume-window-into-column; }
    // Mod+Period { expel-window-from-column; }

    Mod+R { switch-preset-column-width; }
    Mod+Shift+R { switch-preset-window-height; }
    Mod+Ctrl+R { reset-window-height; }
    Mod+F { maximize-column; }
    Mod+Shift+F { fullscreen-window; }

    // Expand the focused column to space not taken up by other fully visible columns.
    // Makes the column "fill the rest of the space".
    Mod+Ctrl+F { expand-column-to-available-width; }

    Mod+Shift+C { center-column; }

    // Center all fully visible columns on screen.
    Mod+Ctrl+C { center-visible-columns; }

    // Finer width adjustments.
    // This command can also:
    // * set width in pixels: "1000"
    // * adjust width in pixels: "-5" or "+5"
    // * set width as a percentage of screen width: "25%"
    // * adjust width as a percentage of screen width: "-10%" or "+10%"
    // Pixel sizes use logical, or scaled, pixels. I.e. on an output with scale 2.0,
    // set-column-width "100" will make the column occupy 200 physical screen pixels.
    Mod+Minus { set-column-width "-10%"; }
    Mod+Equal { set-column-width "+10%"; }

    // Finer height adjustments when in column with other windows.
    Mod+Shift+Minus { set-window-height "-10%"; }
    Mod+Shift+Equal { set-window-height "+10%"; }

    // Move the focused window between the floating and the tiling layout.
    Mod+V       { toggle-window-floating; }
    Mod+Shift+V { switch-focus-between-floating-and-tiling; }

    // Toggle tabbed column display mode.
    // Windows in this column will appear as vertical tabs,
    // rather than stacked on top of each other.
    Mod+W { toggle-column-tabbed-display; }

    // Actions to switch layouts.
    // Note: if you uncomment these, make sure you do NOT have
    // a matching layout switch hotkey configured in xkb options above.
    // Having both at once on the same hotkey will break the switching,
    // since it will switch twice upon pressing the hotkey (once by xkb, once by niri).
    // Mod+Space       { switch-layout "next"; }
    // Mod+Shift+Space { switch-layout "prev"; }

    Print { screenshot; }
    Ctrl+Print { screenshot-screen; }
    Alt+Print { screenshot-window; }

    XF86Assistant { screenshot; }

    // Applications such as remote-desktop clients and software KVM switches may
    // request that niri stops processing the keyboard shortcuts defined here
    // so they may, for example, forward the key presses as-is to a remote machine.
    // It's a good idea to bind an escape hatch to toggle the inhibitor,
    // so a buggy application can't hold your session hostage.
    //
    // The allow-inhibiting=false property can be applied to other binds as well,
    // which ensures niri always processes them, even when an inhibitor is active.
    Mod+Escape allow-inhibiting=false { toggle-keyboard-shortcuts-inhibit; }

    // The quit action will show a confirmation dialog to avoid accidental exits.
    Mod+Shift+E { quit; }
    Ctrl+Alt+Delete { quit; }

    // Powers off the monitors. To turn them back on, do any input like
    // moving the mouse or pressing any other key.
    Mod+Shift+P { power-off-monitors; }
}

cursor {
    xcursor-theme "Bibata-Modern-Ice"
}
